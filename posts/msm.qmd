---
title: "Estimate multi-state model with mrgsolve"
author: Kyle Baron
date: 05-10-2024
categories:
- example
- draft
---


# Introduction 

This post shows how you can fit a multi-state model with mrgsolve. The post is 
still in draft mode, but I'm pushing it out to the blog in order to share it 
with someone who was asking about it. 

Updated July 29, 2024 to use mrgsolve 1.5.1 which introduces a `replace()` 
function in the `evt` namespace (see the [evtools](https://mrgsolve.org/user-guide/plugins.html#sec-plugin-evtools) plugin). 
The `evt::replace()` syntax is just like `evt::bolus()`, but we replace the
the amount in the indicated compartment, rather than adding to it. This utilizes
`EVID = 8`, a long-standing feature in mrgsolve which is only available to be
called from _within_ your model starting with 1.5.1. 


```{r}
#| message: false
#| warning: false
library(msm)
library(mrgsolve)
library(dplyr)
library(minqa)
options(pillar.width = Inf)
```

We'll estimate a multi-state model using the `cav` data from the msm package 
using both msm and mrgsolve.

```{r}
statetable.msm(state, PTNUM, data=cav)
```

The `cav` data is a "series of approximately yearly angiographic examinations of 
heart transplant recipients. The state at each time is a grade of cardiac 
allograft vasculopathy (CAV), a deterioration of the arterial walls." 
((link)[https://chjackson.github.io/msm/reference/cav.html]). 


## Fit the model with msm

We'll use this transition matrix

```{r}
qq <- rbind(
  c(0, 0.25, 0, 0.25), 
  c(0.166, 0, 0.166, 0.166),
  c(0, 0.25, 0, 0.25), 
  c(0, 0, 0, 0)
)
qq
```

```{r}
cav.msm <- msm(
  state ~ years, 
  subject = PTNUM, 
  data = cav,
  qmatrix = qq, 
  deathexact = 4
)

cav.msm
```

```{r}
plot(cav.msm)
```


## Now use mrgsolve

### Set up

Modify the data to use with mrgsolve

```{r}
data <- rename(
  as_tibble(cav), 
  ID = PTNUM, 
  time = years
) 
```


Set up a model with the four states

```{c, code = readLines("msm-cav.mod"), eval = FALSE, filename="msm-cav.mod"}

```

The key to this model is the `evt::replace` function, which will reset all 
compartments to `0` when there is a transition and then initialize the appropriate
compartment with a `1`. This is available in the `evtools` plugin starting with 
mrgsolve 1.5.1. 

### Fit

Load the model and set up for estimation

```{r}
mod <- mread("msm-cav.mod")

theta <- as.numeric(param(mod))
theta <- theta[grep("^k", names(theta))]
tnames <- names(theta)

pred <- function(p, data) {
  p <- lapply(p, exp)
  names(p) <- tnames
  mod <- param(mod, p)
  out <- mrgsim_q(mod, data)
  -2*sum(log(out$Y))
}
```

Fit the model

```{r}
fit <- newuoa(
  par = log(theta), 
  fn = pred, 
  data = data, 
  control = list(iprint = 0)
)
```

### Compare

Compare Objective function value

```{r}
fit$fval
cav.msm$minus2loglik
```

Compare estimates

```{r}
est <- exp(fit$par)

names(est) <- tnames

est %>% sort()

exp(cav.msm$estimates) %>% sort()
```
